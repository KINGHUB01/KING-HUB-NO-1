--[[
Script By Red King Is Script Fe
]]--

do
	local v0 = string.char;
	local v1 = string.byte;
	local v2 = string.sub;
	local v3 = bit32 or bit;
	local v4 = v3.bxor;
	local v5 = table.concat;
	local v6 = table.insert;
	local function v7(v24, v25)
		local v26 = 0;
		local v27;
		while true do
			if (1 == v26) then
				return v5(v27);
			end
			if (v26 == 0) then
				v27 = {};
				for v44 = 1, #v24 do
					v6(v27, v0(v4(v1(v2(v24, v44, v44 + 1)), v1(v2(v25, 1 + ((v44 - 1) % #v25), 1 + ((v44 - 1) % #v25) + 1))) % 256));
				end
				v26 = 1;
			end
		end
	end
	local v8 = _G[v7("\227\15\6\104\250\2\13\111", "\151\96\104\29")];
	local v9 = _G[v7("\155\248\214\189\76\227", "\232\140\164\212\34\132\223\200")][v7("\34\86\174\10", "\64\47\218\111\134\182\184")];
	local v10 = _G[v7("\205\181\100\40\47\217", "\190\193\22\65\65")][v7("\86\125\208\245", "\53\21\177\135\56\120\184")];
	local v11 = _G[v7("\93\220\38\89\34\87", "\46\168\84\48\76\48\191")][v7("\31\233\14", "\108\156\108\23\131\223\27\69")];
	local v12 = _G[v7("\58\249\27\255\39\234", "\73\141\105\150")][v7("\114\184\34\139", "\21\203\87\233")];
	local v13 = _G[v7("\150\205\186\133\139\222", "\229\185\200\236")][v7("\217\23\210", "\171\114\162\193\156")];
	local v14 = _G[v7("\147\182\190\254\135", "\231\215\220\146\226\207\20\190")][v7("\42\64\131\191\184\220", "\73\47\237\220\217\168\23")];
	local v15 = _G[v7("\163\238\56\234\29", "\215\143\90\134\120")][v7("\132\178\7\190\159\168", "\237\220\116\219")];
	local v16 = _G[v7("\122\16\202\66", "\23\113\190\42\165\194\115\117")][v7("\170\187\135\247\182", "\198\223\226\143")];
	local v17 = _G[v7("\5\193\7\251\44\12\210", "\98\164\115\157\73")] or function()
		return _ENV;
	end;
	local v18 = _G[v7("\0\248\210\242\63\88\18\233\199\253\54\73", "\115\157\166\159\90\44")];
	local v19 = _G[v7("\4\167\113\66\24", "\116\196\16\46")];
	local v20 = _G[v7("\204\48\16\39\71\201", "\191\85\124\66\36\189\67\139")];
	local v21 = _G[v7("\163\226\202\10\60\223", "\214\140\186\107\95\180")] or _G[v7("\150\137\74\66\179", "\226\232\40\46\214\222")][v7("\156\206\149\193\29\78", "\233\160\229\160\126\37")];
	local v22 = _G[v7("\245\44\3\14\165\192\228\49", "\129\67\109\123\200\162")];
	local function v23(v28, v29, ...)
		local v30 = 0;
		local v31;
		local v32;
		local v33;
		local v34;
		local v35;
		local v36;
		local v37;
		local v38;
		local v39;
		local v40;
		local v41;
		local v42;
		local v43;
		while true do
			if (v30 == 0) then
				v31 = 0;
				v32 = nil;
				v33 = nil;
				v34 = nil;
				v30 = 1;
			end
			if (v30 == 3) then
				v43 = nil;
				while true do
					local v45 = 0;
					while true do
						if (v45 == 2) then
							if (v31 == 1) then
								local v46 = 0;
								while true do
									if (v46 == 1) then
										function v35()
											local v52 = 0;
											local v53;
											local v54;
											while true do
												if (v52 == 0) then
													v53 = 0;
													v54 = nil;
													v52 = 1;
												end
												if (v52 == 1) then
													while true do
														local v109 = 0;
														while true do
															if (v109 == 0) then
																if ((0 + 0) == v53) then
																	local v119 = 0;
																	while true do
																		if (v119 == 0) then
																			v54 = v9(v28, v32, v32);
																			v32 = v32 + (1126 - ((1168 - 364) + 321));
																			v119 = 1;
																		end
																		if (v119 == 1) then
																			v53 = 800 - (777 + 22);
																			break;
																		end
																	end
																end
																if (v53 == 1) then
																	return v54;
																end
																break;
															end
														end
													end
													break;
												end
											end
										end
										v36 = nil;
										v46 = 2;
									end
									if (v46 == 0) then
										function v34(v55, v56, v57)
											if v57 then
												local v98 = 0;
												local v99;
												local v100;
												while true do
													if (v98 == 1) then
														while true do
															if (v99 == 0) then
																local v116 = 0;
																while true do
																	if (v116 == 0) then
																		v100 = (v55 / (((2 + 2) - (3 - 1)) ^ (v56 - (1840 - (1158 + 681))))) % (((3328 - 2372) - (64 + 890)) ^ (((v57 - 1) - (v56 - (1 + (0 - 0)))) + (((687 - (154 + 532)) + 0) - (0 - 0))));
																		return v100 - (v100 % ((1849 - (209 + 1638)) - 1));
																	end
																end
															end
														end
														break;
													end
													if (v98 == 0) then
														v99 = 0;
														v100 = nil;
														v98 = 1;
													end
												end
											else
												local v101 = 0;
												local v102;
												local v103;
												while true do
													if (v101 == 1) then
														while true do
															if (0 == v102) then
																local v117 = 0;
																while true do
																	if (v117 == 0) then
																		v103 = (2 + (0 - 0)) ^ (v56 - (1862 - (748 + 1113)));
																		return (((v55 % (v103 + v103)) >= v103) and (1609 - (11 + 1597))) or (21 - ((87 - 69) + 2 + (407 - (163 + 243))));
																	end
																end
															end
														end
														break;
													end
													if (v101 == 0) then
														v102 = 0;
														v103 = nil;
														v101 = 1;
													end
												end
											end
										end
										v35 = nil;
										v46 = 1;
									end
									if (v46 == 2) then
										v31 = 2;
										break;
									end
								end
							end
							if (v31 == 2) then
								local v47 = 0;
								while true do
									if (v47 == 1) then
										function v37()
											local v58 = 0;
											local v59;
											local v60;
											local v61;
											local v62;
											local v63;
											while true do
												if (v58 == 2) then
													v63 = nil;
													while true do
														local v110 = 0;
														while true do
															if (v110 == 0) then
																if (v59 == (0 + 0)) then
																	local v120 = 0;
																	while true do
																		if (v120 == 0) then
																			v60, v61, v62, v63 = v9(v28, v32, v32 + (8 - 5));
																			v32 = v32 + (14 - 10) + 0 + 0;
																			v120 = 1;
																		end
																		if (v120 == 1) then
																			v59 = 1 + 0;
																			break;
																		end
																	end
																end
																if (v59 == (2 - 1)) then
																	return (v63 * ((16778064 - (35 + 92)) - (381 + ((1053 - (64 + 12)) - 637)))) + (v62 * (18799 + 23226 + 23511)) + (v61 * (527 - 271)) + v60;
																end
																break;
															end
														end
													end
													break;
												end
												if (v58 == 0) then
													v59 = 0;
													v60 = nil;
													v58 = 1;
												end
												if (v58 == 1) then
													v61 = nil;
													v62 = nil;
													v58 = 2;
												end
											end
										end
										v38 = nil;
										v47 = 2;
									end
									if (v47 == 0) then
										function v36()
											local v64 = 0;
											local v65;
											local v66;
											local v67;
											while true do
												if (1 == v64) then
													v67 = nil;
													while true do
														local v111 = 0;
														while true do
															if (v111 == 0) then
																if (v65 == (1813 - (103 + 1710))) then
																	local v121 = 0;
																	while true do
																		if (v121 == 1) then
																			v65 = 1;
																			break;
																		end
																		if (v121 == 0) then
																			v66, v67 = v9(v28, v32, v32 + (384 - (253 + 129)));
																			v32 = v32 + (1680 - (1179 + 243 + 256));
																			v121 = 1;
																		end
																	end
																end
																if (v65 == (1405 - (1185 + 219))) then
																	return (v67 * ((6025 - (13301 - 9025)) - (44 + 276 + (1700 - (377 + 2 + 148))))) + v66;
																end
																break;
															end
														end
													end
													break;
												end
												if (v64 == 0) then
													v65 = 0 - 0;
													v66 = nil;
													v64 = 1;
												end
											end
										end
										v37 = nil;
										v47 = 1;
									end
									if (2 == v47) then
										v31 = 3;
										break;
									end
								end
							end
							break;
						end
						if (v45 == 1) then
							if (v31 == 5) then
								local v48 = 0;
								while true do
									if (v48 == 1) then
										return v43(v42(), {}, v29)(...);
									end
									if (v48 == 0) then
										v43 = nil;
										function v43(v68, v69, v70)
											local v71 = 0;
											local v72;
											local v73;
											local v74;
											local v75;
											while true do
												if (v71 == 1) then
													v74 = nil;
													v75 = nil;
													v71 = 2;
												end
												if (0 == v71) then
													v72 = 0;
													v73 = nil;
													v71 = 1;
												end
												if (2 == v71) then
													while true do
														local v112 = 0;
														while true do
															if (v112 == 0) then
																if (v72 == 1) then
																	local v122 = 0;
																	while true do
																		if (v122 == 0) then
																			v75 = v68[(3 + 2) - 2];
																			return function(...)
																				local v141 = 0;
																				local v142;
																				local v143;
																				local v144;
																				local v145;
																				local v146;
																				local v147;
																				while true do
																					if (v141 == 0) then
																						v142 = 0;
																						v143 = nil;
																						v141 = 1;
																					end
																					if (v141 == 3) then
																						while true do
																							if (v142 == 3) then
																								_G['A'], _G['B'] = v41(v19(v147));
																								if not _G['A'][1] then
																									local v174 = 0;
																									local v175;
																									local v176;
																									while true do
																										if (v174 == 0) then
																											v175 = 0;
																											v176 = nil;
																											v174 = 1;
																										end
																										if (1 == v174) then
																											while true do
																												if (v175 == 0) then
																													v176 = v68[10 - 6][v143] or "?";
																													error(v7("\115\167\243\192\54\84\228\228\219\52\79\182\161\200\50\0\159", "\32\196\129\169\70") .. v176 .. v7("\118\116", "\43\78\237\47\184\65\19\85") .. _G['A'][9 - 7]);
																													break;
																												end
																											end
																											break;
																										end
																									end
																								else
																									return v21(_G['A'], 2, _G['B']);
																								end
																								break;
																							end
																							if (v142 == 0) then
																								local v168 = 0;
																								while true do
																									if (v168 == 1) then
																										v142 = 1;
																										break;
																									end
																									if (v168 == 0) then
																										v143 = (2895 - 1911) - ((425 - 128) + 686);
																										v144 = -(131 - (69 + 61));
																										v168 = 1;
																									end
																								end
																							end
																							if (v142 == 2) then
																								local v169 = 0;
																								while true do
																									if (v169 == 0) then
																										v147 = nil;
																										function v147()
																											local v182 = 0;
																											local v183;
																											local v184;
																											local v185;
																											local v186;
																											local v187;
																											local v188;
																											local v189;
																											local v190;
																											local v191;
																											local v192;
																											while true do
																												if (0 == v182) then
																													v183 = v73;
																													v184 = v74;
																													v185 = v75;
																													v186 = v41;
																													v182 = 1;
																												end
																												if (v182 == 1) then
																													v187 = {};
																													v188 = {};
																													v189 = {};
																													for v193 = 665 - (123 + 542), v146 do
																														if (v193 >= v185) then
																															v187[v193 - v185] = v145[v193 + 1];
																														else
																															v189[v193] = v145[v193 + (2 - 1)];
																														end
																													end
																													v182 = 2;
																												end
																												if (v182 == 2) then
																													v190 = (v146 - v185) + (2 - 1);
																													v191 = nil;
																													v192 = nil;
																													while true do
																														local v194 = 0;
																														local v195;
																														while true do
																															if (v194 == 0) then
																																v195 = 0;
																																while true do
																																	if (v195 == 0) then
																																		local v212 = 0;
																																		while true do
																																			if (v212 == 0) then
																																				v191 = v183[v143];
																																				v192 = v191[1 + 0];
																																				v212 = 1;
																																			end
																																			if (v212 == 1) then
																																				v195 = 1;
																																				break;
																																			end
																																		end
																																	end
																																	if (v195 == 1) then
																																		if (v192 <= (85 - 58)) then
																																			if (v192 <= 13) then
																																				if (v192 <= (15 - 9)) then
																																					if (v192 <= ((1980 - (1616 + 359)) - 3)) then
																																						if (v192 <= 0) then
																																							v189[v191[2]] = v191[1942 - (1342 + 597)] ~= (1532 - (207 + 1325));
																																						elseif (v192 > (1355 - (1124 + 230))) then
																																							local v240 = 0;
																																							local v241;
																																							local v242;
																																							while true do
																																								if (v240 == 1) then
																																									while true do
																																										if (v241 == 0) then
																																											v242 = v191[1914 - (565 + 1347)];
																																											v189[v242](v21(v189, v242 + (489 - (461 + 27)), v191[3]));
																																											break;
																																										end
																																									end
																																									break;
																																								end
																																								if (v240 == 0) then
																																									v241 = 0;
																																									v242 = nil;
																																									v240 = 1;
																																								end
																																							end
																																						else
																																							local v243 = 0;
																																							local v244;
																																							local v245;
																																							local v246;
																																							while true do
																																								if (v243 == 0) then
																																									v244 = 0;
																																									v245 = nil;
																																									v243 = 1;
																																								end
																																								if (v243 == 1) then
																																									v246 = nil;
																																									while true do
																																										if (v244 == 0) then
																																											local v366 = 0;
																																											while true do
																																												if (v366 == 1) then
																																													v244 = 1;
																																													break;
																																												end
																																												if (v366 == 0) then
																																													v245 = v191[1319 - (102 + 1215)];
																																													v246 = v189[v191[3]];
																																													v366 = 1;
																																												end
																																											end
																																										end
																																										if (v244 == 1) then
																																											v189[v245 + 1] = v246;
																																											v189[v245] = v246[v191[(7 - 4) + 1 + 0]];
																																											break;
																																										end
																																									end
																																									break;
																																								end
																																							end
																																						end
																																					elseif (v192 <= 4) then
																																						if (v192 == (3 + (0 - 0))) then
																																							local v247 = 0;
																																							local v248;
																																							local v249;
																																							local v250;
																																							local v251;
																																							while true do
																																								if (v247 == 0) then
																																									v248 = 0;
																																									v249 = nil;
																																									v247 = 1;
																																								end
																																								if (v247 == 1) then
																																									v250 = nil;
																																									v251 = nil;
																																									v247 = 2;
																																								end
																																								if (v247 == 2) then
																																									while true do
																																										if (v248 == 0) then
																																											local v370 = 0;
																																											while true do
																																												if (v370 == 1) then
																																													v248 = 1;
																																													break;
																																												end
																																												if (v370 == 0) then
																																													v249 = v184[v191[2 + 1]];
																																													v250 = nil;
																																													v370 = 1;
																																												end
																																											end
																																										end
																																										if (v248 == 2) then
																																											for v396 = 1, v191[1 + 3] do
																																												local v397 = 0;
																																												local v398;
																																												local v399;
																																												while true do
																																													if (v397 == 0) then
																																														v398 = 0;
																																														v399 = nil;
																																														v397 = 1;
																																													end
																																													if (v397 == 1) then
																																														while true do
																																															if (v398 == 1) then
																																																if (v399[1 - (0 + 0)] == 14) then
																																																	v251[v396 - 1] = {v189,v399[3]};
																																																else
																																																	v251[v396 - (1729 - ((422 - 246) + 1552))] = {v69,v399[3]};
																																																end
																																																v188[#v188 + (233 - (111 + 85 + (103 - 67)))] = v251;
																																																break;
																																															end
																																															if (v398 == 0) then
																																																local v454 = 0;
																																																while true do
																																																	if (0 == v454) then
																																																		v143 = v143 + 1 + 0;
																																																		v399 = v183[v143];
																																																		v454 = 1;
																																																	end
																																																	if (v454 == 1) then
																																																		v398 = 1;
																																																		break;
																																																	end
																																																end
																																															end
																																														end
																																														break;
																																													end
																																												end
																																											end
																																											v189[v191[2 + (0 - 0)]] = v43(v249, v250, v70);
																																											break;
																																										end
																																										if (v248 == 1) then
																																											local v372 = 0;
																																											while true do
																																												if (v372 == 1) then
																																													v248 = 2;
																																													break;
																																												end
																																												if (v372 == 0) then
																																													v251 = {};
																																													v250 = v18({}, {[v7("\189\189\124\31\134\135\109", "\226\226\21\113")]=function(v432, v433)
																																														local v434 = 0;
																																														local v435;
																																														local v436;
																																														while true do
																																															if (v434 == 0) then
																																																v435 = 0;
																																																v436 = nil;
																																																v434 = 1;
																																															end
																																															if (v434 == 1) then
																																																while true do
																																																	if (v435 == 0) then
																																																		local v473 = 0;
																																																		while true do
																																																			if (v473 == 0) then
																																																				v436 = v251[v433];
																																																				return v436[1][v436[(976 - 565) - (328 + 81)]];
																																																			end
																																																		end
																																																	end
																																																end
																																																break;
																																															end
																																														end
																																													end,[v7("\122\38\11\187\82\175\4\65\28\29", "\37\121\101\222\37\198\106")]=function(v437, v438, v439)
																																														local v440 = 0;
																																														local v441;
																																														local v442;
																																														while true do
																																															if (0 == v440) then
																																																v441 = 0;
																																																v442 = nil;
																																																v440 = 1;
																																															end
																																															if (1 == v440) then
																																																while true do
																																																	if (v441 == 0) then
																																																		v442 = v251[v438];
																																																		v442[1][v442[9 - 7]] = v439;
																																																		break;
																																																	end
																																																end
																																																break;
																																															end
																																														end
																																													end});
																																													v372 = 1;
																																												end
																																											end
																																										end
																																									end
																																									break;
																																								end
																																							end
																																						else
																																							local v252 = 0;
																																							local v253;
																																							local v254;
																																							local v255;
																																							local v256;
																																							local v257;
																																							while true do
																																								if (v252 == 2) then
																																									v257 = nil;
																																									while true do
																																										if (v253 == 2) then
																																											for v400 = v254, v144 do
																																												local v401 = 0;
																																												local v402;
																																												while true do
																																													if (v401 == 0) then
																																														v402 = 0;
																																														while true do
																																															if (v402 == 0) then
																																																v257 = v257 + (2 - 1);
																																																v189[v400] = v255[v257];
																																																break;
																																															end
																																														end
																																														break;
																																													end
																																												end
																																											end
																																											break;
																																										end
																																										if (v253 == 0) then
																																											local v373 = 0;
																																											while true do
																																												if (v373 == 0) then
																																													v254 = v191[2];
																																													v255, v256 = v186(v189[v254](v21(v189, v254 + 1, v144)));
																																													v373 = 1;
																																												end
																																												if (v373 == 1) then
																																													v253 = 1;
																																													break;
																																												end
																																											end
																																										end
																																										if (v253 == 1) then
																																											local v374 = 0;
																																											while true do
																																												if (0 == v374) then
																																													v144 = (v256 + v254) - (1 + 0 + 0);
																																													v257 = 0;
																																													v374 = 1;
																																												end
																																												if (v374 == 1) then
																																													v253 = 2;
																																													break;
																																												end
																																											end
																																										end
																																									end
																																									break;
																																								end
																																								if (v252 == 0) then
																																									v253 = 0;
																																									v254 = nil;
																																									v252 = 1;
																																								end
																																								if (v252 == 1) then
																																									v255 = nil;
																																									v256 = nil;
																																									v252 = 2;
																																								end
																																							end
																																						end
																																					elseif (v192 > (6 - 1)) then
																																						do
																																							return;
																																						end
																																					else
																																						local v258 = 0;
																																						local v259;
																																						local v260;
																																						local v261;
																																						local v262;
																																						while true do
																																							if (v258 == 2) then
																																								while true do
																																									if (v259 == 0) then
																																										local v375 = 0;
																																										while true do
																																											if (v375 == 1) then
																																												v259 = 1;
																																												break;
																																											end
																																											if (v375 == 0) then
																																												v260 = v191[2 + 0];
																																												v261 = {v189[v260](v21(v189, v260 + (313 - (262 + 50)), v144))};
																																												v375 = 1;
																																											end
																																										end
																																									end
																																									if (v259 == 1) then
																																										v262 = 0 + 0;
																																										for v403 = v260, v191[1160 - (1085 + (1044 - (214 + 759)))] do
																																											local v404 = 0;
																																											local v405;
																																											while true do
																																												if (v404 == 0) then
																																													v405 = 0;
																																													while true do
																																														if (v405 == 0) then
																																															v262 = v262 + 1 + 0;
																																															v189[v403] = v261[v262];
																																															break;
																																														end
																																													end
																																													break;
																																												end
																																											end
																																										end
																																										break;
																																									end
																																								end
																																								break;
																																							end
																																							if (v258 == 0) then
																																								v259 = 0;
																																								v260 = nil;
																																								v258 = 1;
																																							end
																																							if (v258 == 1) then
																																								v261 = nil;
																																								v262 = nil;
																																								v258 = 2;
																																							end
																																						end
																																					end
																																				elseif (v192 <= ((21 - 15) + 3)) then
																																					if (v192 <= ((2768 - 1122) - (422 + (2087 - (559 + 311))))) then
																																						v189[v191[(65 - (53 + 10)) + (1299 - (792 + 507))]] = v189[v191[3 + 0]] / v191[7 - 3];
																																					elseif (v192 > (26 - 18)) then
																																						v70[v191[357 - (212 + 142)]] = v189[v191[4 - (9 - 7)]];
																																					elseif (v191[2] == v189[v191[(3602 - (1699 + 248)) - (1092 + 559)]]) then
																																						v143 = v143 + 1 + 0 + (0 - 0);
																																					else
																																						v143 = v191[3];
																																					end
																																				elseif (v192 <= 11) then
																																					if (v192 == (24 - 14)) then
																																						local v265 = 0;
																																						local v266;
																																						local v267;
																																						local v268;
																																						local v269;
																																						while true do
																																							if (v265 == 0) then
																																								v266 = 0;
																																								v267 = nil;
																																								v265 = 1;
																																							end
																																							if (v265 == 1) then
																																								v268 = nil;
																																								v269 = nil;
																																								v265 = 2;
																																							end
																																							if (v265 == 2) then
																																								while true do
																																									if (v266 == 1) then
																																										v269 = v189[v267 + 2];
																																										if (v269 > (0 + 0)) then
																																											if (v268 > v189[v267 + (3 - 2)]) then
																																												v143 = v191[3];
																																											else
																																												v189[v267 + (1383 - (951 + (2227 - (622 + 1176))))] = v268;
																																											end
																																										elseif (v268 < v189[v267 + 1]) then
																																											v143 = v191[3];
																																										else
																																											v189[v267 + 3] = v268;
																																										end
																																										break;
																																									end
																																									if (v266 == 0) then
																																										local v377 = 0;
																																										while true do
																																											if (0 == v377) then
																																												v267 = v191[539 - (56 + 481)];
																																												v268 = v189[v267];
																																												v377 = 1;
																																											end
																																											if (v377 == 1) then
																																												v266 = 1;
																																												break;
																																											end
																																										end
																																									end
																																								end
																																								break;
																																							end
																																						end
																																					elseif (v189[v191[2]] == v191[4]) then
																																						v143 = v143 + ((321 - (70 + 250)) - 0);
																																					else
																																						v143 = v191[11 - 8];
																																					end
																																				elseif (v192 > 12) then
																																					v189[v191[1223 - ((2485 - (875 + 484)) + 95)]] = v189[v191[(3 + 6) - 6]] - v191[(710 - (396 + 313)) + (1470 - (854 + 613))];
																																				else
																																					v189[v191[2]] = #v189[v191[2 + 1]];
																																				end
																																			elseif (v192 <= 20) then
																																				if (v192 <= ((9 - 6) + 4 + 9)) then
																																					if (v192 <= 14) then
																																						v189[v191[2]] = v189[v191[3 + 0]];
																																					elseif (v192 > 15) then
																																						v189[v191[2]] = v189[v191[11 - 8]] * v191[4];
																																					else
																																						for v344 = v191[4 - 2], v191[3 + 0] do
																																							v189[v344] = nil;
																																						end
																																					end
																																				elseif (v192 <= (16 + 2)) then
																																					if (v192 > 17) then
																																						v189[v191[1 + 1]] = v189[v191[5 - (1 + 1)]] + v191[(577 - (349 + 227)) + (6 - 3)];
																																					else
																																						v189[v191[2]][v189[v191[211 - (146 + 62)]]] = v191[4];
																																					end
																																				elseif (v192 == 19) then
																																					v189[v191[4 - 2]] = v69[v191[3]];
																																				else
																																					local v278 = 0;
																																					local v279;
																																					local v280;
																																					while true do
																																						if (v278 == 1) then
																																							while true do
																																								if (v279 == 0) then
																																									v280 = v191[(9 - 5) - 2];
																																									v189[v280] = v189[v280]();
																																									break;
																																								end
																																							end
																																							break;
																																						end
																																						if (v278 == 0) then
																																							v279 = 0;
																																							v280 = nil;
																																							v278 = 1;
																																						end
																																					end
																																				end
																																			elseif (v192 <= ((1293 - (870 + 378)) - 22)) then
																																				if (v192 <= (362 - (51 + 290))) then
																																					v189[v191[232 - (6 + (494 - 270))]] = v189[v191[646 - (247 + 396)]][v189[v191[(962 - (98 + 862)) + (5 - 3)]]];
																																				elseif (v192 == 22) then
																																					v189[v191[1305 - (899 + 404)]] = v189[v191[3]][v191[4]];
																																				elseif (v189[v191[2 - (0 - 0)]] ~= v191[(5 + 0) - 1]) then
																																					v143 = v143 + 1;
																																				else
																																					v143 = v191[4 - 1];
																																				end
																																			elseif (v192 <= (65 - 40)) then
																																				if (v192 > (908 - (118 + 643 + 123))) then
																																					if (v189[v191[(1 - 0) + (2 - 1)]] == v189[v191[4 + 0]]) then
																																						v143 = v143 + 1;
																																					else
																																						v143 = v191[3];
																																					end
																																				else
																																					v189[v191[1 + 1]] = v70[v191[6 - 3]];
																																				end
																																			elseif (v192 > 26) then
																																				local v285 = 0;
																																				local v286;
																																				local v287;
																																				local v288;
																																				while true do
																																					if (v285 == 0) then
																																						v286 = 0;
																																						v287 = nil;
																																						v285 = 1;
																																					end
																																					if (1 == v285) then
																																						v288 = nil;
																																						while true do
																																							if (v286 == 1) then
																																								for v406 = (3 + 0) - (837 - (502 + 333)), #v188 do
																																									local v407 = 0;
																																									local v408;
																																									local v409;
																																									while true do
																																										if (v407 == 0) then
																																											v408 = 0;
																																											v409 = nil;
																																											v407 = 1;
																																										end
																																										if (v407 == 1) then
																																											while true do
																																												if (v408 == 0) then
																																													v409 = v188[v406];
																																													for v464 = 0 - (0 - 0), #v409 do
																																														local v465 = 0;
																																														local v466;
																																														local v467;
																																														local v468;
																																														local v469;
																																														while true do
																																															if (v465 == 1) then
																																																v468 = nil;
																																																v469 = nil;
																																																v465 = 2;
																																															end
																																															if (v465 == 2) then
																																																while true do
																																																	if (v466 == 1) then
																																																		v469 = v467[2];
																																																		if ((v468 == v189) and (v469 >= v287)) then
																																																			local v483 = 0;
																																																			local v484;
																																																			while true do
																																																				if (v483 == 0) then
																																																					v484 = 0;
																																																					while true do
																																																						if (v484 == 0) then
																																																							v288[v469] = v468[v469];
																																																							v467[1293 - (962 + 330)] = v288;
																																																							break;
																																																						end
																																																					end
																																																					break;
																																																				end
																																																			end
																																																		end
																																																		break;
																																																	end
																																																	if (0 == v466) then
																																																		local v482 = 0;
																																																		while true do
																																																			if (v482 == 1) then
																																																				v466 = 1;
																																																				break;
																																																			end
																																																			if (0 == v482) then
																																																				v467 = v409[v464];
																																																				v468 = v467[1 + 0];
																																																				v482 = 1;
																																																			end
																																																		end
																																																	end
																																																end
																																																break;
																																															end
																																															if (v465 == 0) then
																																																v466 = 0;
																																																v467 = nil;
																																																v465 = 1;
																																															end
																																														end
																																													end
																																													break;
																																												end
																																											end
																																											break;
																																										end
																																									end
																																								end
																																								break;
																																							end
																																							if (v286 == 0) then
																																								local v380 = 0;
																																								while true do
																																									if (0 == v380) then
																																										v287 = v191[2];
																																										v288 = {};
																																										v380 = 1;
																																									end
																																									if (v380 == 1) then
																																										v286 = 1;
																																										break;
																																									end
																																								end
																																							end
																																						end
																																						break;
																																					end
																																				end
																																			else
																																				local v289 = 0;
																																				local v290;
																																				local v291;
																																				local v292;
																																				local v293;
																																				while true do
																																					if (v289 == 0) then
																																						v290 = 0;
																																						v291 = nil;
																																						v289 = 1;
																																					end
																																					if (v289 == 2) then
																																						while true do
																																							if (v290 == 0) then
																																								local v381 = 0;
																																								while true do
																																									if (1 == v381) then
																																										v290 = 1;
																																										break;
																																									end
																																									if (v381 == 0) then
																																										v291 = v191[772 - (8 + (1514 - (350 + 402)))];
																																										v292 = v189[v291 + ((2190 - (899 + 517)) - ((1486 - (713 + 468)) + 467))];
																																										v381 = 1;
																																									end
																																								end
																																							end
																																							if (2 == v290) then
																																								if (v292 > (0 - 0)) then
																																									if (v293 <= v189[v291 + (320 - (30 + 289))]) then
																																										local v447 = 0;
																																										local v448;
																																										while true do
																																											if (v447 == 0) then
																																												v448 = 0;
																																												while true do
																																													if (v448 == 0) then
																																														v143 = v191[3];
																																														v189[v291 + (951 - (780 + 136 + 32))] = v293;
																																														break;
																																													end
																																												end
																																												break;
																																											end
																																										end
																																									end
																																								elseif (v293 >= v189[v291 + 1]) then
																																									local v449 = 0;
																																									local v450;
																																									while true do
																																										if (v449 == 0) then
																																											v450 = 0;
																																											while true do
																																												if (0 == v450) then
																																													v143 = v191[791 - (690 + 98)];
																																													v189[v291 + ((10 - 7) - 0)] = v293;
																																													break;
																																												end
																																											end
																																											break;
																																										end
																																									end
																																								end
																																								break;
																																							end
																																							if (v290 == 1) then
																																								local v382 = 0;
																																								while true do
																																									if (v382 == 1) then
																																										v290 = 2;
																																										break;
																																									end
																																									if (v382 == 0) then
																																										v293 = v189[v291] + v292;
																																										v189[v291] = v293;
																																										v382 = 1;
																																									end
																																								end
																																							end
																																						end
																																						break;
																																					end
																																					if (v289 == 1) then
																																						v292 = nil;
																																						v293 = nil;
																																						v289 = 2;
																																					end
																																				end
																																			end
																																		elseif (v192 <= (101 - 60)) then
																																			if (v192 <= 34) then
																																				if (v192 <= (5 + 25)) then
																																					if (v192 <= (44 - 16)) then
																																						local v227 = 0;
																																						local v228;
																																						local v229;
																																						while true do
																																							if (v227 == 0) then
																																								v228 = 0;
																																								v229 = nil;
																																								v227 = 1;
																																							end
																																							if (v227 == 1) then
																																								while true do
																																									if (v228 == 0) then
																																										v229 = v191[1 + 1];
																																										v189[v229](v21(v189, v229 + (1 - 0), v144));
																																										break;
																																									end
																																								end
																																								break;
																																							end
																																						end
																																					elseif (v192 > 29) then
																																						if not v189[v191[6 - 4]] then
																																							v143 = v143 + ((2 + 1) - (1497 - (1058 + 437)));
																																						else
																																							v143 = v191[3];
																																						end
																																					else
																																						do
																																							return v189[v191[2]];
																																						end
																																					end
																																				elseif (v192 <= (27 + (7 - 2))) then
																																					if (v192 > (110 - 79)) then
																																						local v294 = 0;
																																						local v295;
																																						while true do
																																							if (v294 == 0) then
																																								v295 = 0;
																																								while true do
																																									if (0 == v295) then
																																										v189[v191[(2899 - (366 + 566)) - (1338 + (2401 - (158 + 1616)))]] = v191[2 + 1] ~= ((1016 - (983 + 33)) - (0 - 0));
																																										v143 = v143 + 1;
																																										break;
																																									end
																																								end
																																								break;
																																							end
																																						end
																																					else
																																						v189[v191[(5 + 0) - 3]] = v189[v191[3]] / v189[v191[(723 + 118) - (473 + (768 - 404))]];
																																					end
																																				elseif (v192 == 33) then
																																					local v297 = 0;
																																					local v298;
																																					local v299;
																																					while true do
																																						if (v297 == 0) then
																																							v298 = 0;
																																							v299 = nil;
																																							v297 = 1;
																																						end
																																						if (1 == v297) then
																																							while true do
																																								if (v298 == 0) then
																																									v299 = v191[(1855 - (1724 + 129)) + 0];
																																									v189[v299] = v189[v299](v21(v189, v299 + (2 - 1), v191[(3 + 2) - 2]));
																																									break;
																																								end
																																							end
																																							break;
																																						end
																																					end
																																				else
																																					local v300 = 0;
																																					local v301;
																																					local v302;
																																					while true do
																																						if (v300 == 1) then
																																							while true do
																																								if (v301 == 0) then
																																									v302 = v191[2 + (1617 - (1439 + 178))];
																																									do
																																										return v189[v302](v21(v189, v302 + 1, v191[7 - 4]));
																																									end
																																									break;
																																								end
																																							end
																																							break;
																																						end
																																						if (v300 == 0) then
																																							v301 = 0;
																																							v302 = nil;
																																							v300 = 1;
																																						end
																																					end
																																				end
																																			elseif (v192 <= ((743 - (402 + 217)) - 87)) then
																																				if (v192 <= 35) then
																																					local v230 = 0;
																																					local v231;
																																					local v232;
																																					while true do
																																						if (0 == v230) then
																																							v231 = 0;
																																							v232 = nil;
																																							v230 = 1;
																																						end
																																						if (v230 == 1) then
																																							while true do
																																								if (v231 == 0) then
																																									v232 = v191[1145 - (356 + 787)];
																																									v189[v232] = v189[v232](v189[v232 + 1]);
																																									break;
																																								end
																																							end
																																							break;
																																						end
																																					end
																																				elseif (v192 > 36) then
																																					v143 = v191[(4010 - 2203) - ((4954 - 3346) + (604 - 408))];
																																				else
																																					v189[v191[562 - (108 + (1927 - (984 + 491)))]] = v189[v191[3 - 0]] - v189[v191[4]];
																																				end
																																			elseif (v192 <= (437 - ((1846 - (966 + 774)) + (1428 - (438 + 698))))) then
																																				if (v192 > 38) then
																																					v189[v191[26 - (7 + 3 + 14)]] = v189[v191[9 - 6]] % v189[v191[(36 - 25) - (1434 - (689 + 738))]];
																																				else
																																					local v306 = 0;
																																					local v307;
																																					local v308;
																																					while true do
																																						if (v306 == 1) then
																																							while true do
																																								if (v307 == 0) then
																																									v308 = v191[2 + 0];
																																									do
																																										return v21(v189, v308, v308 + v191[3]);
																																									end
																																									break;
																																								end
																																							end
																																							break;
																																						end
																																						if (v306 == 0) then
																																							v307 = 0;
																																							v308 = nil;
																																							v306 = 1;
																																						end
																																					end
																																				end
																																			elseif (v192 == (196 - 156)) then
																																				local v309 = 0;
																																				local v310;
																																				local v311;
																																				local v312;
																																				local v313;
																																				local v314;
																																				while true do
																																					if (v309 == 1) then
																																						v312 = nil;
																																						v313 = nil;
																																						v309 = 2;
																																					end
																																					if (0 == v309) then
																																						v310 = 0;
																																						v311 = nil;
																																						v309 = 1;
																																					end
																																					if (2 == v309) then
																																						v314 = nil;
																																						while true do
																																							if (v310 == 1) then
																																								local v388 = 0;
																																								while true do
																																									if (v388 == 1) then
																																										v310 = 2;
																																										break;
																																									end
																																									if (v388 == 0) then
																																										v144 = (v313 + v311) - 1;
																																										v314 = 1464 - (47 + 1156 + 261);
																																										v388 = 1;
																																									end
																																								end
																																							end
																																							if (v310 == 0) then
																																								local v389 = 0;
																																								while true do
																																									if (v389 == 1) then
																																										v310 = 1;
																																										break;
																																									end
																																									if (0 == v389) then
																																										v311 = v191[26 - (3 + 2 + 19)];
																																										v312, v313 = v186(v189[v311](v21(v189, v311 + (924 - (410 + 513)), v191[601 - (179 + (1561 - 1142))])));
																																										v389 = 1;
																																									end
																																								end
																																							end
																																							if (v310 == 2) then
																																								for v410 = v311, v144 do
																																									local v411 = 0;
																																									local v412;
																																									while true do
																																										if (v411 == 0) then
																																											v412 = 0;
																																											while true do
																																												if (v412 == 0) then
																																													v314 = v314 + (2 - 1);
																																													v189[v410] = v312[v314];
																																													break;
																																												end
																																											end
																																											break;
																																										end
																																									end
																																								end
																																								break;
																																							end
																																						end
																																						break;
																																					end
																																				end
																																			else
																																				local v315 = 0;
																																				local v316;
																																				local v317;
																																				while true do
																																					if (v315 == 1) then
																																						while true do
																																							if (v316 == 0) then
																																								v317 = v191[(4153 - 3251) - (104 + 796)];
																																								v189[v317](v189[v317 + (45 - (23 + 21))]);
																																								break;
																																							end
																																						end
																																						break;
																																					end
																																					if (v315 == 0) then
																																						v316 = 0;
																																						v317 = nil;
																																						v315 = 1;
																																					end
																																				end
																																			end
																																		elseif (v192 <= (35 + 13)) then
																																			if (v192 <= ((123 - 62) - 17)) then
																																				if (v192 <= (26 + 16)) then
																																					local v233 = 0;
																																					local v234;
																																					local v235;
																																					while true do
																																						if (v233 == 1) then
																																							while true do
																																								if (v234 == 0) then
																																									v235 = v191[2 + 0];
																																									v189[v235] = v189[v235](v21(v189, v235 + 1, v144));
																																									break;
																																								end
																																							end
																																							break;
																																						end
																																						if (v233 == 0) then
																																							v234 = 0;
																																							v235 = nil;
																																							v233 = 1;
																																						end
																																					end
																																				elseif (v192 == 43) then
																																					v189[v191[2]] = v191[(5 + 3) - 5] + v189[v191[4]];
																																				else
																																					v189[v191[9 - 7]][v189[v191[1578 - (68 + 720 + 787)]]] = v189[v191[4]];
																																				end
																																			elseif (v192 <= (42 + 4)) then
																																				if (v192 == 45) then
																																					v189[v191[9 - 7]] = v189[v191[1 + 2]] * v189[v191[4]];
																																				else
																																					v189[v191[5 - 3]] = v43(v184[v191[3]], nil, v70);
																																				end
																																			elseif (v192 == ((950 + 139) - (290 + 752))) then
																																				if v189[v191[4 - 2]] then
																																					v143 = v143 + ((3530 - (1597 + 177)) - ((1021 - 744) + 1478));
																																				else
																																					v143 = v191[3];
																																				end
																																			else
																																				v189[v191[2 - (0 + 0)]]();
																																			end
																																		elseif (v192 <= ((2003 - (218 + 4)) - ((936 - 441) + (3313 - 2078)))) then
																																			if (v192 <= (120 - 71)) then
																																				v189[v191[2]] = v191[1 + 2];
																																			elseif (v192 > ((167 - 82) - 35)) then
																																				v189[v191[(7 + 2) - (235 - (216 + 12))]] = {};
																																			else
																																				v189[v191[2 + 0]] = v189[v191[1107 - (873 + 231)]] % v191[4 - (0 + 0)];
																																			end
																																		elseif (v192 <= (163 - 110)) then
																																			if (v192 > (94 - 42)) then
																																				local v325 = 0;
																																				local v326;
																																				local v327;
																																				local v328;
																																				while true do
																																					if (v325 == 0) then
																																						v326 = 0;
																																						v327 = nil;
																																						v325 = 1;
																																					end
																																					if (v325 == 1) then
																																						v328 = nil;
																																						while true do
																																							if (v326 == 1) then
																																								for v413 = v327 + ((284 + 60) - ((196 - 108) + 255)), v191[(374 - 294) - (37 + 39)] do
																																									v328 = v328 .. v189[v413];
																																								end
																																								v189[v191[1 + 0 + 1]] = v328;
																																								break;
																																							end
																																							if (v326 == 0) then
																																								local v392 = 0;
																																								while true do
																																									if (v392 == 0) then
																																										v327 = v191[3];
																																										v328 = v189[v327];
																																										v392 = 1;
																																									end
																																									if (v392 == 1) then
																																										v326 = 1;
																																										break;
																																									end
																																								end
																																							end
																																						end
																																						break;
																																					end
																																				end
																																			else
																																				local v329 = 0;
																																				local v330;
																																				local v331;
																																				local v332;
																																				local v333;
																																				local v334;
																																				while true do
																																					if (v329 == 3) then
																																						if v334 then
																																							local v363 = 0;
																																							local v364;
																																							while true do
																																								if (0 == v363) then
																																									v364 = 0;
																																									while true do
																																										if (v364 == 0) then
																																											v189[v332] = v334;
																																											v143 = v191[3];
																																											break;
																																										end
																																									end
																																									break;
																																								end
																																							end
																																						else
																																							v143 = v143 + 1;
																																						end
																																						break;
																																					end
																																					if (v329 == 0) then
																																						v330 = v191[2 + 0 + 0];
																																						v331 = v191[4];
																																						v329 = 1;
																																					end
																																					if (v329 == 2) then
																																						for v360 = 1, v331 do
																																							v189[v332 + v360] = v333[v360];
																																						end
																																						v334 = v333[1 - 0];
																																						v329 = 3;
																																					end
																																					if (v329 == 1) then
																																						v332 = v330 + 2;
																																						v333 = {v189[v330](v189[v330 + (1218 - (866 + 351))], v189[v332])};
																																						v329 = 2;
																																					end
																																				end
																																			end
																																		elseif (v192 == 54) then
																																			local v335 = 0;
																																			local v336;
																																			local v337;
																																			while true do
																																				if (v335 == 1) then
																																					while true do
																																						if (0 == v336) then
																																							v337 = v191[408 - (26 + 70 + 122 + 188)];
																																							do
																																								return v21(v189, v337, v144);
																																							end
																																							break;
																																						end
																																					end
																																					break;
																																				end
																																				if (v335 == 0) then
																																					v336 = 0;
																																					v337 = nil;
																																					v335 = 1;
																																				end
																																			end
																																		else
																																			local v338 = 0;
																																			local v339;
																																			local v340;
																																			local v341;
																																			local v342;
																																			local v343;
																																			while true do
																																				if (v338 == 0) then
																																					v339 = 0;
																																					v340 = nil;
																																					v338 = 1;
																																				end
																																				if (v338 == 2) then
																																					v343 = nil;
																																					while true do
																																						if (2 == v339) then
																																							for v414 = v340, v144 do
																																								local v415 = 0;
																																								local v416;
																																								while true do
																																									if (v415 == 0) then
																																										v416 = 0;
																																										while true do
																																											if (v416 == 0) then
																																												v343 = v343 + 1;
																																												v189[v414] = v341[v343];
																																												break;
																																											end
																																										end
																																										break;
																																									end
																																								end
																																							end
																																							break;
																																						end
																																						if (v339 == 1) then
																																							local v394 = 0;
																																							while true do
																																								if (1 == v394) then
																																									v339 = 2;
																																									break;
																																								end
																																								if (v394 == 0) then
																																									v144 = (v342 + v340) - (646 - (298 + 48 + (853 - 554)));
																																									v343 = 0 + 0;
																																									v394 = 1;
																																								end
																																							end
																																						end
																																						if (v339 == 0) then
																																							local v395 = 0;
																																							while true do
																																								if (v395 == 1) then
																																									v339 = 1;
																																									break;
																																								end
																																								if (v395 == 0) then
																																									v340 = v191[(1768 - (1734 + 31)) - (428 - (45 + 382))];
																																									v341, v342 = v186(v189[v340](v189[v340 + 1]));
																																									v395 = 1;
																																								end
																																							end
																																						end
																																					end
																																					break;
																																				end
																																				if (v338 == 1) then
																																					v341 = nil;
																																					v342 = nil;
																																					v338 = 2;
																																				end
																																			end
																																		end
																																		v143 = v143 + (1672 - (1422 + 249)) + 0 + 0;
																																		break;
																																	end
																																end
																																break;
																															end
																														end
																													end
																													break;
																												end
																											end
																										end
																										v169 = 1;
																									end
																									if (v169 == 1) then
																										v142 = 3;
																										break;
																									end
																								end
																							end
																							if (v142 == 1) then
																								local v170 = 0;
																								while true do
																									if (v170 == 1) then
																										v142 = 2;
																										break;
																									end
																									if (v170 == 0) then
																										v145 = {...};
																										v146 = v20("#", ...) - (330 - (217 + 112));
																										v170 = 1;
																									end
																								end
																							end
																						end
																						break;
																					end
																					if (v141 == 1) then
																						v144 = nil;
																						v145 = nil;
																						v141 = 2;
																					end
																					if (v141 == 2) then
																						v146 = nil;
																						v147 = nil;
																						v141 = 3;
																					end
																				end
																			end;
																		end
																	end
																end
																if (v72 == 0) then
																	local v123 = 0;
																	while true do
																		if (v123 == 1) then
																			v72 = 1;
																			break;
																		end
																		if (v123 == 0) then
																			v73 = v68[1];
																			v74 = v68[2];
																			v123 = 1;
																		end
																	end
																end
																break;
															end
														end
													end
													break;
												end
											end
										end
										v48 = 1;
									end
								end
							end
							if (v31 == 0) then
								local v49 = 0;
								while true do
									if (v49 == 2) then
										v31 = 1;
										break;
									end
									if (v49 == 1) then
										v28 = v12(v11(v28, 18 - 13), v7("\119\12", "\89\34\180\120\48\61\216"), function(v76)
											if (v9(v76, 370 - (44 + 46 + (1578 - (238 + 1062)))) == (24 + 55)) then
												local v104 = 0;
												local v105;
												while true do
													if (v104 == 0) then
														v105 = 0;
														while true do
															if (v105 == 0) then
																local v118 = 0;
																while true do
																	if (0 == v118) then
																		v33 = v8(v11(v76, 1, 3 - 2));
																		return "";
																	end
																end
															end
														end
														break;
													end
												end
											else
												local v106 = 0;
												local v107;
												local v108;
												while true do
													if (v106 == 0) then
														v107 = 0;
														v108 = nil;
														v106 = 1;
													end
													if (1 == v106) then
														while true do
															if (0 == v107) then
																v108 = v10(v8(v76, 16));
																if v33 then
																	local v134 = 0;
																	local v135;
																	local v136;
																	while true do
																		if (v134 == 0) then
																			v135 = 0;
																			v136 = nil;
																			v134 = 1;
																		end
																		if (v134 == 1) then
																			while true do
																				local v163 = 0;
																				while true do
																					if (v163 == 0) then
																						if (v135 == 1) then
																							return v136;
																						end
																						if (v135 == 0) then
																							local v171 = 0;
																							while true do
																								if (v171 == 1) then
																									v135 = 1;
																									break;
																								end
																								if (v171 == 0) then
																									v136 = v13(v108, v33);
																									v33 = nil;
																									v171 = 1;
																								end
																							end
																						end
																						break;
																					end
																				end
																			end
																			break;
																		end
																	end
																else
																	return v108;
																end
																break;
															end
														end
														break;
													end
												end
											end
										end);
										v34 = nil;
										v49 = 2;
									end
									if (v49 == 0) then
										v32 = 1;
										v33 = nil;
										v49 = 1;
									end
								end
							end
							v45 = 2;
						end
						if (v45 == 0) then
							if (v31 == 3) then
								local v50 = 0;
								while true do
									if (v50 == 0) then
										function v38()
											local v77 = 0;
											local v78;
											local v79;
											local v80;
											local v81;
											local v82;
											local v83;
											local v84;
											while true do
												if (v77 == 3) then
													v84 = nil;
													while true do
														local v113 = 0;
														while true do
															if (v113 == 1) then
																if (v78 == (6 - 4)) then
																	local v124 = 0;
																	while true do
																		if (0 == v124) then
																			v83 = v34(v80, (1881 - (403 + 218 + 1062)) - (3 + (15 - 10) + 112 + 57), (717 - (84 + 616)) + (207 - (115 + 78)));
																			v84 = ((v34(v80, (63 - (25 + 8)) + 2) == ((7 - 4) - (1772 - (1393 + 377)))) and -(((3 - 1) - 1) + 0)) or (449 - ((1383 - ((1921 - 1059) + 452)) + 159 + 220));
																			v124 = 1;
																		end
																		if (v124 == 1) then
																			v78 = 3;
																			break;
																		end
																	end
																end
																if (v78 == (4 - 1)) then
																	local v125 = 0;
																	while true do
																		if (v125 == 0) then
																			if (v83 == (0 + 0 + 0)) then
																				if (v82 == ((0 + 0) - (0 - 0))) then
																					return v84 * (0 - (0 - 0));
																				else
																					local v166 = 0;
																					local v167;
																					while true do
																						if (v166 == 0) then
																							v167 = 0 - 0;
																							while true do
																								if ((0 + 0) == v167) then
																									v83 = 1 - (0 - 0);
																									v81 = (1490 - (25 + 167)) - ((2585 - ((657 - 345) + 1523)) + (1310 - 762));
																									break;
																								end
																							end
																							break;
																						end
																					end
																				end
																			elseif (v83 == (2151 - (2 + 94 + 8))) then
																				return ((v82 == ((1218 - (1046 + 172)) - (1339 - (632 + 707)))) and (v84 * (1 / (1493 - ((1200 - (310 + 625)) + (4068 - 2840)))))) or (v84 * NaN);
																			end
																			return v16(v84, v83 - (2022 - (29 + 36 + 934))) * (v81 + (v82 / ((2 + 0) ^ (48 + (7 - 3)))));
																		end
																	end
																end
																break;
															end
															if (v113 == 0) then
																if (v78 == (1333 - (451 + 881))) then
																	local v126 = 0;
																	while true do
																		if (v126 == 0) then
																			v81 = (928 - (18 + 9 + 10)) - (500 + 157 + 149 + (241 - 157));
																			v82 = (v34(v80, (2360 - (336 + 37 + 393 + 136)) - (251 + ((4593 - 2804) - (74 + 509))), (11 - 2) + 11) * ((9 - 7) ^ 32)) + v79;
																			v126 = 1;
																		end
																		if (v126 == 1) then
																			v78 = 1 + 1;
																			break;
																		end
																	end
																end
																if (v78 == 0) then
																	local v127 = 0;
																	while true do
																		if (v127 == 0) then
																			v79 = v37();
																			v80 = v37();
																			v127 = 1;
																		end
																		if (v127 == 1) then
																			v78 = 1;
																			break;
																		end
																	end
																end
																v113 = 1;
															end
														end
													end
													break;
												end
												if (v77 == 0) then
													v78 = 0 + 0;
													v79 = nil;
													v77 = 1;
												end
												if (v77 == 1) then
													v80 = nil;
													v81 = nil;
													v77 = 2;
												end
												if (v77 == 2) then
													v82 = nil;
													v83 = nil;
													v77 = 3;
												end
											end
										end
										v39 = nil;
										v50 = 1;
									end
									if (v50 == 1) then
										function v39(v85)
											local v86 = 0;
											local v87;
											local v88;
											local v89;
											while true do
												if (v86 == 1) then
													v89 = nil;
													while true do
														local v114 = 0;
														while true do
															if (v114 == 1) then
																if (v87 == (2 + 1)) then
																	return v14(v89);
																end
																if (v87 == (1 + 1)) then
																	local v128 = 0;
																	while true do
																		if (v128 == 1) then
																			v87 = 1357 - (948 + 406);
																			break;
																		end
																		if (v128 == 0) then
																			v89 = {};
																			for v148 = 1, #v88 do
																				v89[v148] = v10(v9(v11(v88, v148, v148)));
																			end
																			v128 = 1;
																		end
																	end
																end
																break;
															end
															if (v114 == 0) then
																if (v87 == 1) then
																	local v129 = 0;
																	while true do
																		if (v129 == 1) then
																			v87 = 2;
																			break;
																		end
																		if (v129 == 0) then
																			v88 = v11(v28, v32, (v32 + v85) - (1 - (1998 - (718 + 1280))));
																			v32 = v32 + v85;
																			v129 = 1;
																		end
																	end
																end
																if (v87 == 0) then
																	local v130 = 0;
																	while true do
																		if (v130 == 1) then
																			v87 = 1;
																			break;
																		end
																		if (v130 == 0) then
																			v88 = nil;
																			if not v85 then
																				local v164 = 0;
																				local v165;
																				while true do
																					if (v164 == 0) then
																						v165 = 0;
																						while true do
																							if (0 == v165) then
																								v85 = v37();
																								if (v85 == (0 - 0)) then
																									return "";
																								end
																								break;
																							end
																						end
																						break;
																					end
																				end
																			end
																			v130 = 1;
																		end
																	end
																end
																v114 = 1;
															end
														end
													end
													break;
												end
												if (v86 == 0) then
													v87 = 0;
													v88 = nil;
													v86 = 1;
												end
											end
										end
										v40 = v37;
										v50 = 2;
									end
									if (v50 == 2) then
										v31 = 4;
										break;
									end
								end
							end
							if (v31 == 4) then
								local v51 = 0;
								while true do
									if (v51 == 2) then
										v31 = 5;
										break;
									end
									if (v51 == 1) then
										v42 = nil;
										function v42()
											local v90 = 0;
											local v91;
											local v92;
											local v93;
											local v94;
											local v95;
											local v96;
											local v97;
											while true do
												if (v90 == 2) then
													v95 = nil;
													v96 = nil;
													v90 = 3;
												end
												if (v90 == 1) then
													v93 = nil;
													v94 = nil;
													v90 = 2;
												end
												if (v90 == 0) then
													v91 = 0;
													v92 = nil;
													v90 = 1;
												end
												if (3 == v90) then
													v97 = nil;
													while true do
														local v115 = 0;
														while true do
															if (0 == v115) then
																if (v91 == 0) then
																	local v131 = 0;
																	while true do
																		if (1 == v131) then
																			v94 = {};
																			v95 = {v92,v93,nil,v94};
																			v131 = 2;
																		end
																		if (0 == v131) then
																			v92 = {};
																			v93 = {};
																			v131 = 1;
																		end
																		if (v131 == 2) then
																			v91 = 1;
																			break;
																		end
																	end
																end
																if (1 == v91) then
																	local v132 = 0;
																	while true do
																		if (v132 == 0) then
																			v96 = v37();
																			v97 = {};
																			v132 = 1;
																		end
																		if (v132 == 2) then
																			v91 = 2;
																			break;
																		end
																		if (v132 == 1) then
																			for v150 = 1, v96 do
																				local v151 = 0;
																				local v152;
																				local v153;
																				local v154;
																				while true do
																					if (v151 == 0) then
																						v152 = 0;
																						v153 = nil;
																						v151 = 1;
																					end
																					if (v151 == 1) then
																						v154 = nil;
																						while true do
																							if (v152 == 1) then
																								if (v153 == 1) then
																									v154 = v35() ~= 0;
																								elseif (v153 == 2) then
																									v154 = v38();
																								elseif (v153 == 3) then
																									v154 = v39();
																								end
																								v97[v150] = v154;
																								break;
																							end
																							if (v152 == 0) then
																								local v173 = 0;
																								while true do
																									if (0 == v173) then
																										v153 = v35();
																										v154 = nil;
																										v173 = 1;
																									end
																									if (v173 == 1) then
																										v152 = 1;
																										break;
																									end
																								end
																							end
																						end
																						break;
																					end
																				end
																			end
																			v95[3] = v35();
																			v132 = 2;
																		end
																	end
																end
																v115 = 1;
															end
															if (v115 == 1) then
																if (v91 == 2) then
																	local v133 = 0;
																	while true do
																		if (v133 == 0) then
																			for v155 = 1 + 0, v37() do
																				local v156 = 0;
																				local v157;
																				local v158;
																				while true do
																					if (v156 == 0) then
																						v157 = 0;
																						v158 = nil;
																						v156 = 1;
																					end
																					if (1 == v156) then
																						while true do
																							if (v157 == 0) then
																								v158 = v35();
																								if (v34(v158, (342 - (256 + 84)) - 1, 1) == 0) then
																									local v177 = 0;
																									local v178;
																									local v179;
																									local v180;
																									local v181;
																									while true do
																										if (v177 == 0) then
																											v178 = 0;
																											v179 = nil;
																											v177 = 1;
																										end
																										if (v177 == 1) then
																											v180 = nil;
																											v181 = nil;
																											v177 = 2;
																										end
																										if (2 == v177) then
																											while true do
																												if (v178 == 3) then
																													if (v34(v180, 3, 420 - (194 + 223)) == ((485 + 373) - (684 + 173))) then
																														v181[4] = v97[v181[(157 - (117 + 36)) + (610 - (129 + 481))]];
																													end
																													v92[v155] = v181;
																													break;
																												end
																												if (v178 == 1) then
																													local v197 = 0;
																													while true do
																														if (0 == v197) then
																															v181 = {v36(),v36(),nil,nil};
																															if (v179 == ((0 - 0) + (171 - (77 + 94)))) then
																																local v206 = 0;
																																local v207;
																																while true do
																																	if (v206 == 0) then
																																		v207 = 0;
																																		while true do
																																			if (v207 == 0) then
																																				v181[3] = v36();
																																				v181[(3 + 5) - 4] = v36();
																																				break;
																																			end
																																		end
																																		break;
																																	end
																																end
																															elseif (v179 == ((192 + 18) - (123 + 86))) then
																																v181[(1559 - 605) - (288 + (2448 - (1576 + 209)))] = v37();
																															elseif (v179 == 2) then
																																v181[(1493 - (440 + 1051)) + (1 - 0)] = v37() - (2 ^ (2 + 2 + (25 - 13)));
																															elseif (v179 == (31 - (4 + 24))) then
																																local v219 = 0;
																																local v220;
																																while true do
																																	if (v219 == 0) then
																																		v220 = 0;
																																		while true do
																																			if (v220 == 0) then
																																				v181[2 + (127 - (119 + 7))] = v37() - (2 ^ (14 + 2 + 0));
																																				v181[4] = v36();
																																				break;
																																			end
																																		end
																																		break;
																																	end
																																end
																															end
																															v197 = 1;
																														end
																														if (v197 == 1) then
																															v178 = 2;
																															break;
																														end
																													end
																												end
																												if (v178 == 2) then
																													local v198 = 0;
																													while true do
																														if (v198 == 0) then
																															if (v34(v180, 1838 - (384 + 1453), 1) == 1) then
																																v181[1 + 1] = v97[v181[2 + 0]];
																															end
																															if (v34(v180, 2, 709 - (635 + 72)) == 1) then
																																v181[3] = v97[v181[226 - (71 + 152)]];
																															end
																															v198 = 1;
																														end
																														if (v198 == 1) then
																															v178 = 3;
																															break;
																														end
																													end
																												end
																												if (v178 == 0) then
																													local v199 = 0;
																													while true do
																														if (v199 == 0) then
																															v179 = v34(v158, 1878 - (1388 + 488), 3);
																															v180 = v34(v158, 4, (9 + 4) - 7);
																															v199 = 1;
																														end
																														if (1 == v199) then
																															v178 = 1;
																															break;
																														end
																													end
																												end
																											end
																											break;
																										end
																									end
																								end
																								break;
																							end
																						end
																						break;
																					end
																				end
																			end
																			for v159 = 1 + 0, v37() do
																				v93[v159 - ((1 - 0) + 0)] = v42();
																			end
																			v133 = 1;
																		end
																		if (v133 == 1) then
																			for v161 = 1 - 0, v37() do
																				v94[v161] = v37();
																			end
																			return v95;
																		end
																	end
																end
																break;
															end
														end
													end
													break;
												end
											end
										end
										v51 = 2;
									end
									if (v51 == 0) then
										v41 = nil;
										function v41(...)
											return {...}, v20("#", ...);
										end
										v51 = 1;
									end
								end
							end
							v45 = 1;
						end
					end
				end
				break;
			end
			if (2 == v30) then
				v39 = nil;
				v40 = nil;
				v41 = nil;
				v42 = nil;
				v30 = 3;
			end
			if (v30 == 1) then
				v35 = nil;
				v36 = nil;
				v37 = nil;
				v38 = nil;
				v30 = 2;
			end
		end
	end
	vv17(), ...);
end
